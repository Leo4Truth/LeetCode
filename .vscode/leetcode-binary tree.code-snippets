{
	// Place your LeetCodeChallenge 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "leetcode-binary tree",
		"body": [
			"#include <iostream>",
			"#include <vector>",
			"#include <queue>",
			"#include <deque>",
			"#include <stack>",
			"#include <algorithm>",
			"#include <unordered_map>",
			"#include <unordered_set>",
			"",
			"using namespace std;", //标准命名空间
			"",
			"struct TreeNode {",
			"\tint val;",
			"\tTreeNode* left;",
			"\tTreeNode* right;",
			"\tTreeNode() : val(0), left(nullptr), right(nullptr) {}",
			"\tTreeNode(int _val) : val(_val), left(nullptr), right(nullptr) {}",
			"};",
			"",
			"class Solution {",
			"public:",
			"\t$0", //最终光标会在这里等待输入
			"};",
			"",
			"int main(int argc, char* argv[]) {",
			"",
			"\tSolution solution;",
			"",
			"\t//system(\"pause\");", //标准C++的等待用户动作
			"\treturn 0;", //结束
			"}",
			"",
		],
		"description": "LeetCode C++ template."
	}
}